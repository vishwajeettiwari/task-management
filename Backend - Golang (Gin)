package main

import (
    "github.com/gin-gonic/gin"
    "github.com/golang-jwt/jwt/v4"
    "github.com/gorilla/websocket"
    "gorm.io/gorm"
    "gorm.io/driver/postgres"
    "net/http"
    "os"
    "time"
)

var db *gorm.DB
var wsUpgrader = websocket.Upgrader{
    CheckOrigin: func(r *http.Request) bool {
        return true
    },
}

type Task struct {
    ID          uint   `gorm:"primaryKey"`
    Title       string `json:"title"`
    Description string `json:"description"`
    Status      string `json:"status"`
}

func init() {
    dsn := os.Getenv("DATABASE_URL")
    database, err := gorm.Open(postgres.Open(dsn), &gorm.Config{})
    if err != nil {
        panic("Failed to connect to the database!")
    }
    db = database
    db.AutoMigrate(&Task{})
}

func main() {
    r := gin.Default()

    r.POST("/login", loginHandler)
    r.GET("/tasks", authMiddleware(), getTasks)
    r.POST("/tasks", authMiddleware(), createTask)
    r.GET("/ws", handleWebSocket)

    r.Run(":8080")
}
